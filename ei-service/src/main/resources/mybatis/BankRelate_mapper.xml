<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="BankRelate">
	<!-- start autocreate -->

	<resultMap id="BankRelateResult" type="com.ppmg.ei.model.BankRelateModel">
		<result column="FUND_ID" property="fundId" jdbcType="VARCHAR" />
		<result column="BANK_ID" property="bankId" jdbcType="VARCHAR" />
		<result column="ACCOUNT_NAME" property="accountName" jdbcType="VARCHAR" />
		<result column="ACCOUNTS" property="accounts" jdbcType="VARCHAR" />
		<result column="CAPITAL_QUOTA" property="capitalQuota" jdbcType="NUMERIC" />
		<result column="ARRIVAL_AMOUNT" property="arrivalAmount" jdbcType="NUMERIC" />
		<result column="STATUS" property="status" jdbcType="VARCHAR" />
		<result column="CREATE_BY" property="createBy" jdbcType="VARCHAR" />
		<result column="CREATE_DT" property="createDt" jdbcType="TIMESTAMP" />
		<result column="UPDATE_BY" property="updateBy" jdbcType="VARCHAR" />
		<result column="UPDATE_DT" property="updateDt" jdbcType="TIMESTAMP" />
		<result column="ACCOUNT_TYPE" property="accountType" jdbcType="VARCHAR" />

	</resultMap>

	<insert id="insert" parameterType="com.ppmg.ei.model.BankRelateModel">
		INSERT INTO BD_T_FOF_BANK_RELATE (FUND_ID,BANK_ID,ACCOUNT_NAME,ACCOUNTS,CAPITAL_QUOTA,ARRIVAL_AMOUNT,STATUS,CREATE_BY,CREATE_DT,UPDATE_BY,UPDATE_DT,ACCOUNT_TYPE) values(#{fundId,jdbcType=VARCHAR},#{bankId,jdbcType=VARCHAR},#{accountName,jdbcType=VARCHAR},#{accounts,jdbcType=VARCHAR},#{capitalQuota,jdbcType=NUMERIC},#{arrivalAmount,jdbcType=NUMERIC},#{status,jdbcType=VARCHAR},#{createBy,jdbcType=VARCHAR},#{createDt,jdbcType=TIMESTAMP},#{updateBy,jdbcType=VARCHAR},#{updateDt,jdbcType=TIMESTAMP},#{accountType,jdbcType=VARCHAR})
	</insert>

	<insert id="insertBatch" parameterType="List">
		INSERT INTO BD_T_FOF_BANK_RELATE (FUND_ID,BANK_ID,ACCOUNT_NAME,ACCOUNTS,CAPITAL_QUOTA,ARRIVAL_AMOUNT,STATUS,CREATE_BY,CREATE_DT,UPDATE_BY,UPDATE_DT,ACCOUNT_TYPE)
		<foreach collection="list" item="item" index="index" separator="union all">
			( select
				#{item.fundId,jdbcType=VARCHAR},
				#{item.bankId,jdbcType=VARCHAR},
				#{item.accountName,jdbcType=VARCHAR},
				#{item.accounts,jdbcType=VARCHAR},
				#{item.capitalQuota,jdbcType=NUMERIC},
				#{item.arrivalAmount,jdbcType=NUMERIC},
				#{item.status,jdbcType=VARCHAR},
				#{item.createBy,jdbcType=VARCHAR},
				#{item.createDt,jdbcType=TIMESTAMP},
				#{item.updateBy,jdbcType=VARCHAR},
				#{item.updateDt,jdbcType=TIMESTAMP},
			    #{item.accountType,jdbcType=VARCHAR}
		 	from dual)
		</foreach>
	</insert>

	<delete id="deleteById" parameterType="String">
		DELETE FROM  BD_T_FOF_BANK_RELATE WHERE FUND_ID = #{fundId,jdbcType=VARCHAR}
	</delete>

	<delete id="deletePK" parameterType="com.ppmg.ei.model.BankRelateModel">
		DELETE FROM BD_T_FOF_BANK_RELATE
		<where>
			<if test="fundId != null and fundId != ''" >
				FUND_ID = #{fundId,jdbcType=VARCHAR}
			</if>
			<if test="bankId != null and bankId != ''" >
				AND BANK_ID = #{bankId,jdbcType=VARCHAR}
			</if>
			<if test="accountName != null and accountName != ''" >
				AND ACCOUNT_NAME = #{accountName,jdbcType=VARCHAR}
			</if>
			<if test="accounts != null and accounts != ''" >
				AND ACCOUNTS = #{accounts,jdbcType=VARCHAR}
			</if>
			<if test="capitalQuota != null and capitalQuota != ''" >
				AND CAPITAL_QUOTA = #{capitalQuota,jdbcType=NUMERIC}
			</if>
			<if test="arrivalAmount != null and arrivalAmount != ''" >
				AND ARRIVAL_AMOUNT = #{arrivalAmount,jdbcType=NUMERIC}
			</if>
			<if test="status != null and status != ''" >
				AND STATUS = #{status,jdbcType=VARCHAR}
			</if>
			<if test="createBy != null and createBy != ''" >
				AND CREATE_BY = #{createBy,jdbcType=VARCHAR}
			</if>
			<if test="createDt != null" >
				AND CREATE_DT = #{createDt,jdbcType=VARCHAR}
			</if>
			<if test="updateBy != null and updateBy != ''" >
				AND UPDATE_BY = #{updateBy,jdbcType=VARCHAR}
			</if>
			<if test="updateDt != null" >
				AND UPDATE_DT = #{updateDt,jdbcType=VARCHAR}
			</if>
			<if test="accountType != null and accountType != ''" >
				AND ACCOUNT_TYPE = #{accountType,jdbcType=VARCHAR}
			</if>
		</where>
	</delete>

	<delete id="deleteBatch" parameterType="List">
		DELETE FROM  BD_T_FOF_BANK_RELATE WHERE FUND_ID IN
		<foreach collection="array" item="item" open="(" separator="," close=")">
			#{item}
		</foreach>
	</delete>

	<update id="updatePK" parameterType="com.ppmg.ei.model.BankRelateModel">
		UPDATE BD_T_FOF_BANK_RELATE 
		<set>
			<if test="fundId != null and fundId != ''" >
				FUND_ID = #{fundId,jdbcType=VARCHAR},
			</if>
			<if test="bankId != null and bankId != ''" >
				BANK_ID = #{bankId,jdbcType=VARCHAR},
			</if>
			<if test="accountName != null and accountName != ''" >
				ACCOUNT_NAME = #{accountName,jdbcType=VARCHAR},
			</if>
			<if test="accounts != null and accounts != ''" >
				ACCOUNTS = #{accounts,jdbcType=VARCHAR},
			</if>
			<if test="capitalQuota != null and capitalQuota != ''" >
				CAPITAL_QUOTA = #{capitalQuota,jdbcType=NUMERIC},
			</if>
			<if test="arrivalAmount != null and arrivalAmount != ''" >
				ARRIVAL_AMOUNT = #{arrivalAmount,jdbcType=NUMERIC},
			</if>
			<if test="status != null and status != ''" >
				STATUS = #{status,jdbcType=VARCHAR},
			</if>
			<if test="createBy != null and createBy != ''" >
				CREATE_BY = #{createBy,jdbcType=VARCHAR},
			</if>
			<if test="createDt != null" >
				CREATE_DT = #{createDt,jdbcType=TIMESTAMP},
			</if>
			<if test="updateBy != null and updateBy != ''" >
				UPDATE_BY = #{updateBy,jdbcType=VARCHAR},
			</if>
			<if test="updateDt != null" >
				UPDATE_DT = #{updateDt,jdbcType=TIMESTAMP},
			</if>
			<if test="accountType != null and accountType != ''" >
				 ACCOUNT_TYPE = #{accountType,jdbcType=VARCHAR},
			</if>
		</set>
		WHERE FUND_ID = #{fundId,jdbcType=VARCHAR}
		and BANK_ID = #{bankId,jdbcType=VARCHAR}
		and  ACCOUNTS = #{oldAccounts,jdbcType=VARCHAR}
	</update>

	<select id="selectById" parameterType="String" resultMap="BankRelateResult">
		SELECT * FROM BD_T_FOF_BANK_RELATE WHERE FUND_ID = #{fundId,jdbcType=VARCHAR}
	</select>

	<select id="selectBy" parameterType="com.ppmg.ei.model.BankRelateModel" resultMap="BankRelateResult">
		SELECT * FROM BD_T_FOF_BANK_RELATE
		<where>
			<if test="fundId != null and fundId != ''" >
				FUND_ID = #{fundId,jdbcType=VARCHAR}
			</if>
			<if test="bankId != null and bankId != ''" >
				AND BANK_ID = #{bankId,jdbcType=VARCHAR}
			</if>
			<if test="accountName != null and accountName != ''" >
				AND ACCOUNT_NAME = #{accountName,jdbcType=VARCHAR}
			</if>
			<if test="accounts != null and accounts != ''" >
				AND ACCOUNTS = #{accounts,jdbcType=VARCHAR}
			</if>
			<if test="capitalQuota != null and capitalQuota != ''" >
				AND CAPITAL_QUOTA = #{capitalQuota,jdbcType=NUMERIC}
			</if>
			<if test="arrivalAmount != null and arrivalAmount != ''" >
				AND ARRIVAL_AMOUNT = #{arrivalAmount,jdbcType=NUMERIC}
			</if>
			<if test="status != null and status != ''" >
				AND STATUS = #{status,jdbcType=VARCHAR}
			</if>
			<if test="createBy != null and createBy != ''" >
				AND CREATE_BY = #{createBy,jdbcType=VARCHAR}
			</if>
			<if test="createDt != null" >
				AND CREATE_DT = #{createDt,jdbcType=VARCHAR}
			</if>
			<if test="updateBy != null and updateBy != ''" >
				AND UPDATE_BY = #{updateBy,jdbcType=VARCHAR}
			</if>
			<if test="updateDt != null" >
				AND UPDATE_DT = #{updateDt,jdbcType=VARCHAR}
			</if>
			<if test="accountType != null and accountType != ''" >
				AND ACCOUNT_TYPE = #{accountType,jdbcType=VARCHAR}
			</if>
		</where>
	</select>

	<sql id="searchSql">
		SELECT * FROM BD_T_FOF_BANK_RELATE
		<where>
			<include refid="searchCondition.searchClause" />
		</where>
	</sql>

	<select id="selectListPage" resultMap="BankRelateResult" parameterType="com.founder.ssm.core.common.SearchCondition">
				<include refid="searchSql" />
	</select>

	<select id="selectCount" resultType="Integer" parameterType="com.founder.ssm.core.common.SearchCondition">
		SELECT COUNT(*) FROM (
			<include refid="searchSql" />
		) t 
	</select>

	<select id="selectCountBy" resultType="Integer" parameterType="com.ppmg.ei.model.BankRelateModel">
		SELECT COUNT(*) FROM BD_T_FOF_BANK_RELATE
		<where>
			<if test="fundId != null and fundId != ''" >
				FUND_ID = #{fundId,jdbcType=VARCHAR}
			</if>
			<if test="bankId != null and bankId != ''" >
				AND BANK_ID = #{bankId,jdbcType=VARCHAR}
			</if>
			<if test="accountName != null and accountName != ''" >
				AND ACCOUNT_NAME = #{accountName,jdbcType=VARCHAR}
			</if>
			<if test="accounts != null and accounts != ''" >
				AND ACCOUNTS = #{accounts,jdbcType=VARCHAR}
			</if>
			<if test="capitalQuota != null and capitalQuota != ''" >
				AND CAPITAL_QUOTA = #{capitalQuota,jdbcType=NUMERIC}
			</if>
			<if test="arrivalAmount != null and arrivalAmount != ''" >
				AND ARRIVAL_AMOUNT = #{arrivalAmount,jdbcType=NUMERIC}
			</if>
			<if test="status != null and status != ''" >
				AND STATUS = #{status,jdbcType=VARCHAR}
			</if>
			<if test="createBy != null and createBy != ''" >
				AND CREATE_BY = #{createBy,jdbcType=VARCHAR}
			</if>
			<if test="createDt != null" >
				AND CREATE_DT = #{createDt,jdbcType=VARCHAR}
			</if>
			<if test="updateBy != null and updateBy != ''" >
				AND UPDATE_BY = #{updateBy,jdbcType=VARCHAR}
			</if>
			<if test="updateDt != null" >
				AND UPDATE_DT = #{updateDt,jdbcType=VARCHAR}
			</if>
			<if test="accountType != null and accountType != ''" >
				AND ACCOUNT_TYPE = #{accountType,jdbcType=VARCHAR}
			</if>
		</where>
	</select>

	<select id="selectList" parameterType="com.ppmg.ei.model.BankRelateModel" resultMap="BankRelateResult">
		SELECT * FROM BD_T_FOF_BANK_RELATE
		<where>
			<if test="fundId != null and fundId != ''" >
				FUND_ID = #{fundId,jdbcType=VARCHAR}
			</if>
			<if test="bankId != null and bankId != ''" >
				AND BANK_ID = #{bankId,jdbcType=VARCHAR}
			</if>
			<if test="accountName != null and accountName != ''" >
				AND ACCOUNT_NAME = #{accountName,jdbcType=VARCHAR}
			</if>
			<if test="accounts != null and accounts != ''" >
				AND ACCOUNTS = #{accounts,jdbcType=VARCHAR}
			</if>
			<if test="capitalQuota != null and capitalQuota != ''" >
				AND CAPITAL_QUOTA = #{capitalQuota,jdbcType=NUMERIC}
			</if>
			<if test="arrivalAmount != null and arrivalAmount != ''" >
				AND ARRIVAL_AMOUNT = #{arrivalAmount,jdbcType=NUMERIC}
			</if>
			<if test="status != null and status != ''" >
				AND STATUS = #{status,jdbcType=VARCHAR}
			</if>
			<if test="createBy != null and createBy != ''" >
				AND CREATE_BY = #{createBy,jdbcType=VARCHAR}
			</if>
			<if test="createDt != null" >
				AND CREATE_DT = #{createDt,jdbcType=VARCHAR}
			</if>
			<if test="updateBy != null and updateBy != ''" >
				AND UPDATE_BY = #{updateBy,jdbcType=VARCHAR}
			</if>
			<if test="updateDt != null" >
				AND UPDATE_DT = #{updateDt,jdbcType=VARCHAR}
			</if>
			<if test="accountType != null and accountType != ''" >
				AND ACCOUNT_TYPE = #{accountType,jdbcType=VARCHAR}
			</if>
		</where>
	</select>

	<select id="selectSql2Obj" parameterType="java.lang.String" resultMap="BankRelateResult">
		${value}
	</select>
	<select id="selectSql2Map" parameterType="java.lang.String" resultType="Map">
		${value}
	</select>
	<update id="updateSql" parameterType="java.lang.String">
		${value}
	</update>
	<select id="selectCountSql" parameterType="java.lang.String" resultType="Integer">
		${value}
	</select>
	<!-- end autocreate -->
</mapper>
